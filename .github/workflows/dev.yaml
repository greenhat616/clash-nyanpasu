name: Dev Build

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - dev
  schedule:
    - cron: "15 0 * * *" # 每天 08:15 UTC+8 自动构建
env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  release:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    if: startsWith(github.repository, 'keiko233')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: dev # Dev branch

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          key: ${{ matrix.os }}

      - name: Install the missing rust target (macOS Only)
        if: startsWith(matrix.os, 'macos-')
        run: |
          rustup target add aarch64-apple-darwin

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Delete current release assets
        if: startsWith(matrix.os, 'ubuntu-')
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag: pre-release
          fail-if-no-assets: false
          fail-if-no-release: false
          assets: |
            *.zip
            *.gz
            *.AppImage
            *.deb
            *.dmg
            *.msi
            *.sig
            *.exe
            *.json

      - name: Install Dependencies (Ubuntu Only)
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf openssl

      - name: Pnpm install and check
        run: |
          pnpm i
          pnpm check && pnpm prepare:nightly

      - name: Tauri build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: pre-release
          releaseName: "Clash Nyanpasu Dev"
          releaseBody: "More new features are now supported."
          releaseDraft: false
          prerelease: true
          tauriScript: pnpm
          args: -f default-meta nightly -c ./backend/tauri/tauri.nightly.conf.json

      - name: Portable Bundle (Windows Only)
        if: matrix.os == 'windows-latest'
        run: |
          pnpm portable
        env:
          TAG_NAME: pre-release
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          VITE_WIN_PORTABLE: 1

      - name: Pnpm check (macOS aarch64)
        if: startsWith(matrix.os, 'macos-')
        run: |
          pnpm check --arch arm64 --sidecar-host aarch64-apple-darwin

      - name: Tauri build with Upload (macOS aarch64)
        if: startsWith(matrix.os, 'macos-')
        env:
          TAG_NAME: pre-release
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          pnpm build:nightly --target aarch64-apple-darwin
          pnpm upload:osx-aarch64

  update_tag:
    name: Update tag
    runs-on: ubuntu-latest
    needs: [release]
    if: startsWith(github.repository, 'keiko233')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: dev # Dev branch
      - name: Set Env
        run: |
          echo "BUILDTIME=$(TZ=Asia/Shanghai date)" >> $GITHUB_ENV
        shell: bash
      - name: Update Tag
        uses: richardsimko/update-tag@v1.0.11
        with:
          tag_name: pre-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          cat > release.txt << 'EOF'
          ## Clash Nyanpasu Nightly Build
          Release created at  ${{ env.BUILDTIME }}.
          Daily build of Clash Nyanpasu Dev branch.
          [See the development log here](https://t.me/keikolog/462)
          EOF
      - name: Update Release
        uses: ncipollo/release-action@v1
        with:
          name: Clash Nyanpasu Dev
          tag: pre-release
          bodyFile: release.txt
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  updater:
    name: Update Nigthly Updater
    runs-on: ubuntu-latest
    needs: [release, update_tag]
    if: startsWith(github.repository, 'keiko233')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: dev # Dev branch
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Pnpm install
        run: pnpm i
      - name: Update Updater
        run: pnpm updater:nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
